import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

// Lista inicial de palabras comunes en inglés para práctica de mecanografía
const commonEnglishWords = [
  "the",
  "of",
  "and",
  "a",
  "to",
  "in",
  "is",
  "you",
  "that",
  "it",
  "he",
  "was",
  "for",
  "on",
  "are",
  "as",
  "with",
  "his",
  "they",
  "i",
  "at",
  "be",
  "this",
  "have",
  "from",
  "or",
  "one",
  "had",
  "by",
  "word",
  "but",
  "not",
  "what",
  "all",
  "were",
  "we",
  "when",
  "your",
  "can",
  "said",
  "there",
  "each",
  "which",
  "she",
  "do",
  "how",
  "their",
  "if",
  "will",
  "up",
  "other",
  "about",
  "out",
  "many",
  "then",
  "them",
  "these",
  "so",
  "some",
  "her",
  "would",
  "make",
  "like",
  "into",
  "him",
  "time",
  "has",
  "two",
  "more",
  "very",
  "after",
  "words",
  "first",
  "where",
  "been",
  "who",
  "its",
  "now",
  "find",
  "long",
  "down",
  "way",
  "get",
  "come",
  "made",
  "may",
  "part",
  "over",
  "new",
  "sound",
  "take",
  "only",
  "little",
  "work",
  "know",
  "place",
  "year",
  "live",
  "me",
  "back",
  "give",
  "most",
  "very",
  "after",
  "thing",
  "our",
  "just",
  "name",
  "good",
  "sentence",
  "man",
  "think",
  "say",
  "great",
  "where",
  "help",
  "through",
  "much",
  "before",
  "line",
  "right",
  "too",
  "mean",
  "old",
  "any",
  "same",
  "tell",
  "boy",
  "follow",
  "came",
  "want",
  "show",
  "also",
  "around",
  "form",
  "three",
  "small",
  "set",
  "put",
  "end",
  "why",
  "again",
  "turn",
  "here",
  "off",
  "went",
  "old",
  "number",
  "great",
  "tell",
  "men",
  "say",
  "small",
  "every",
  "found",
  "still",
  "between",
  "mane",
  "should",
  "home",
  "big",
  "give",
  "air",
  "line",
  "set",
  "own",
  "under",
  "read",
  "last",
  "never",
  "us",
  "left",
  "end",
  "along",
  "while",
  "might",
  "next",
  "sound",
  "below",
  "saw",
  "something",
  "thought",
  "both",
  "few",
  "those",
  "always",
  "looked",
  "show",
  "large",
  "often",
  "together",
  "asked",
  "house",
  "world",
  "going",
  "want",
  "school",
  "important",
  "until",
  "form",
  "food",
  "keep",
  "children",
  "feet",
  "land",
  "side",
  "without",
  "boy",
  "once",
  "animal",
  "life",
  "enough",
  "took",
  "sometimes",
  "four",
  "head",
  "above",
  "kind",
  "began",
  "almost",
  "live",
  "page",
  "got",
  "earth",
  "need",
  "far",
  "hand",
  "high",
  "year",
  "mother",
  "light",
  "country",
  "father",
  "let",
  "night",
  "picture",
  "being",
  "study",
  "second",
  "soon",
  "story",
  "since",
  "white",
  "ever",
  "paper",
  "hard",
  "near",
  "sentence",
  "better",
  "best",
  "across",
  "during",
  "today",
  "however",
  "sure",
  "knew",
  "its",
  "try",
  "told",
  "young",
];

async function main() {
  console.log("🌱 Iniciando seeding de la base de datos...");

  try {
    // Crear la lista de palabras en inglés
    const englishWordList = await prisma.wordList.upsert({
      where: { name: "english_common" },
      update: {},
      create: {
        name: "english_common",
        lang: "en",
        description: "Palabras comunes en inglés para práctica de mecanografía",
      },
    });

    console.log(`✅ Lista de palabras creada: ${englishWordList.name}`);

    // Limpiar palabras existentes de esta lista para evitar duplicados
    await prisma.word.deleteMany({
      where: { wordListId: englishWordList.id },
    });

    // Crear las palabras asociadas a esta lista
    const words = await prisma.word.createMany({
      data: commonEnglishWords.map((wordText) => ({
        text: wordText,
        wordListId: englishWordList.id,
      })),
      skipDuplicates: true,
    });

    console.log(
      `✅ ${words.count} palabras agregadas a la lista "${englishWordList.name}"`
    );

    // Verificar que se crearon correctamente
    const wordCount = await prisma.word.count({
      where: { wordListId: englishWordList.id },
    });

    console.log(`✅ Total de palabras en la base de datos: ${wordCount}`);
    console.log("🎉 Seeding completado exitosamente!");
  } catch (error) {
    console.error("❌ Error durante el seeding:", error);
    throw error;
  }
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error(e);
    await prisma.$disconnect();
    process.exit(1);
  });
